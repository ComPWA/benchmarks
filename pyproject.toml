[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=61.2"]

[project]
authors = [{name = "Common Partial Wave Analysis", email = "compwa-admin@ep1.rub.de"}]
dependencies = [
    "matplotlib",
    "polarization-sensitivity @ git+https://github.com/redeboer/polarization-sensitivity@15f5ce0",
    "tensorwaves[jax] >=0.4.5", # lambdify sympy.Indexed
]
description = "Benchmarks for amplitude analysis frameworks"
dynamic = ["version"]
license = {text = "GPLv3 or later"}
name = "benchmarks"
requires-python = ">=3.12"

[project.readme]
content-type = "text/markdown"
file = "README.md"

[dependency-groups]
dev = [
    "ruff",
    "sphinx-autobuild",
    {include-group = "doc"},
    {include-group = "jupyter"},
    {include-group = "style"},
    {include-group = "test"},
]
doc = [
    "myst-nb",
    "myst-parser[linkify]",
    "sphinx",
    "sphinx-api-relink",
    "sphinx-book-theme",
    "sphinx-codeautolink[ipython]",
    "sphinx-copybutton",
    "sphinx-togglebutton",
    {include-group = "notebooks"},
]
jupyter = [
    "jupyterlab",
    "jupyterlab",
    "jupyterlab-code-formatter",
    "jupyterlab-git",
    "jupyterlab-lsp",
    "jupyterlab-myst",
    "jupyterlab-myst",
    "python-lsp-ruff",
    "python-lsp-server[rope]",
]
notebooks = ["pandas"]
style = ["sphinx-api-relink"]
test = [
    "nbmake",
    {include-group = "notebooks"},
]

[tool.setuptools]
include-package-data = false

[tool.pyright]
exclude = [
    "**/.venv/",
]
reportAttributeAccessIssue = false
reportGeneralTypeIssues = false
reportImportCycles = false
reportMissingParameterType = false
reportMissingTypeArgument = false
reportMissingTypeStubs = false
reportPrivateImportUsage = false
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportUnknownParameterType = false
reportUnknownVariableType = false
reportUnnecessaryIsInstance = false
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedImport = true
reportUnusedVariable = true
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."

[tool.pytest.ini_options]
addopts = [
    "--color=yes",
    "--doctest-continue-on-failure",
    "--doctest-modules",
    "--durations=3",
    "--ignore=docs/conf.py",
    "-m not slow",
]
filterwarnings = [
    "error",
    "ignore:.*argument to NotebookFile is deprecated.*:pytest.PytestRemovedIn8Warning",
    "ignore:the imp module is deprecated in favour of importlib.*:DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (select with '-m slow')",
]
norecursedirs = [
    ".ipynb_checkpoints",
    "_build",
]
testpaths = [
    "src",
    "tests",
]

[tool.ruff]
extend-include = ["*.ipynb"]
preview = true
show-fixes = true

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = [
    "ANN",
    "COM812",
    "CPY001",
    "D101",
    "D102",
    "D103",
    "D105",
    "D107",
    "D203",
    "D213",
    "D407",
    "D416",
    "DOC",
    "E501",
    "FBT",
    "FURB101",
    "FURB103",
    "FURB140",
    "G004",
    "ISC001",
    "PLW1514",
    "PT001",
    "PTH",
    "SIM108",
]
select = ["ALL"]
task-tags = ["cspell"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["display"]

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "B018",
    "C408",
    "C90",
    "D",
    "E303",
    "E402",
    "E703",
    "N806",
    "N816",
    "PD901",
    "PLR09",
    "PLR2004",
    "PLW0602",
    "PLW0603",
    "S101",
    "T20",
    "TC00",
]
"docs/*" = [
    "E402",
    "INP001",
    "S101",
    "S113",
    "T201",
]
"docs/conf.py" = ["D100"]
"scripts/*" = ["INP001"]
"setup.py" = ["D100"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = false
ignore_case = true
in_place = true
sort_first = [
    "build-system",
    "project",
    "tool.setuptools",
    "tool.setuptools_scm",
]
spaces_indent_inline_array = 4
trailing_comma_inline_array = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    docnb-force,
    linkcheck,
    sty,
skip_install = True
skip_missing_interpreters = True
skipsdist = True

[testenv]
passenv = *
setenv =
    PYTHONHASHSEED = 0

[testenv:doc]
allowlist_externals =
    sphinx-build
commands =
    sphinx-build \
        --builder=html \
        --fail-on-warning \
        --keep-going \
        --show-traceback \
        docs/ docs/_build/html
description = Build documentation and API through Sphinx

[testenv:docnb]
base = doc
description = {[testenv:doc]description} with cached notebook execution
setenv =
    {[testenv:doc]setenv}
    EXECUTE_NB = yes

[testenv:docnb-force]
base = doc
description = {[testenv:doc]description} with notebook execution (no cache)
setenv =
    {[testenv:doc]setenv}
    FORCE_EXECUTE_NB = yes

[testenv:doclive]
allowlist_externals =
    sphinx-autobuild
commands =
    sphinx-autobuild \
        --open-browser \
        --port=0 \
        --re-ignore='.*/__pycache__/.*' \
        --re-ignore='.*/.ipynb_checkpoints/.*' \
        --re-ignore='.*/.virtual_documents/.*' \
        --re-ignore='.*\\.tmp' \
        --watch docs \
        docs/ docs/_build/html
description = Set up a server to directly preview changes to the HTML pages

[testenv:docnblive]
base = doclive
description = {[testenv:doclive]description} with cached notebook execution
setenv =
    {[testenv:doclive]setenv}
    EXECUTE_NB = yes

[testenv:linkcheck]
allowlist_externals =
    sphinx-build
commands =
    sphinx-build \
        --builder=linkcheck \
        --show-traceback \
        docs/ docs/_build/linkcheck
description = Check external links in the documentation (requires internet connection)
setenv =
    PYTHONWARNINGS =

[testenv:nb]
allowlist_externals =
    pytest
commands =
    pytest --nbmake {posargs:docs}
description = Run all notebooks with pytest

[testenv:sty]
allowlist_externals =
    pre-commit
commands =
    pre-commit run --all-files {posargs}
description = Perform all linting, formatting, and spelling checks
"""
